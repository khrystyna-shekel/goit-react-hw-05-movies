{"version":3,"file":"static/js/186.2c7475a5.chunk.js","mappings":"4OA2CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAc1B,OAZAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEYC,EAAAA,EAAAA,GAAY,UAADC,OAAWpB,EAAO,aAAY,KAAD,EAAAc,EAAAE,EAAAK,KAA1DN,EAAOD,EAAPC,QACRR,EAAWQ,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEpBO,QAAQC,IAAIR,EAAAM,GAAMG,SAAS,yBAAAT,EAAAU,OAAA,GAAAb,EAAA,kBAE9B,kBAPc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAQfnB,GACF,GAAG,CAACT,KAGF6B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGzB,IACCuB,EAAAA,EAAAA,KAACG,EAAU,CAAAD,SACRzB,EAAQ2B,OAAS,EAChB3B,EAAQ4B,KAAI,SAAAC,GAAE,OACZC,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,WAASI,EAAGE,WAChBD,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,aAAWI,EAAGG,eAAeC,aACjCH,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAI,WAASI,EAAGG,eAAeE,WAC/BX,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAGM,YAJAN,EAAGO,GAKP,KAGPb,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAMhB,EAIA,IAAMC,EAAaW,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iS","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/movies.api';\nimport styled from 'styled-components';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReview = async () => {\n      try {\n        const { results } = await fetchMovies(`/movie/${movieId}/reviews`);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getReview();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && (\n        <StyledList>\n          {reviews.length > 0 ? (\n            reviews.map(el => (\n              <li key={el.id}>\n                <h4>Author: {el.author}</h4>\n                <h4>Username: {el.author_details.username}</h4>\n                <h4>Rating: {el.author_details.rating}</h4>\n                <p>{el.content}</p>\n              </li>\n            ))\n          ) : (\n            <h4>No reviews added</h4>\n          )}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\nconst StyledList = styled.ul`\n  padding: 25px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    padding: 20px;\n    box-shadow: 2px 2px 4px 1px gray;\n\n    p {\n      line-height: 1.2em;\n      color: gray;\n    }\n  }\n`;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","getReview","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovies","results","_context","prev","next","fetchMovies","concat","sent","t0","console","log","message","stop","apply","arguments","_jsx","_Fragment","children","StyledList","length","map","el","_jsxs","author","author_details","username","rating","content","id","styled","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}