{"version":3,"file":"static/js/387.781ed835.chunk.js","mappings":"2QAEaA,EAAiBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mTAkB1BC,EAAiBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wK,SCgCxC,EA/Ca,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAcpB,OAZAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEWC,EAAAA,EAAAA,GAAY,UAADC,OAAWpB,EAAO,aAAY,KAAD,EAAAc,EAAAE,EAAAK,KAAvDf,EAAIQ,EAAJR,KACRC,EAAQD,GAAMU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEdO,QAAQC,IAAIR,EAAAM,GAAMG,SAAS,yBAAAT,EAAAU,OAAA,GAAAb,EAAA,kBAE9B,kBAPY,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAQbnB,GACF,GAAG,CAACT,KAGF6B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGzB,IACCuB,EAAAA,EAAAA,KAACnC,EAAc,CAAAqC,SACZzB,EAAK0B,KAAI,SAAAC,GACR,OACEC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEM,IACEF,EAAGG,aAAY,sCAAAhB,OAC2Ba,EAAGG,cACzC,0DAENC,IAAI,eACJC,MAAM,MACNC,OAAO,MACPC,QAAQ,UAEVN,EAAAA,EAAAA,MAACpC,EAAc,CAAAiC,SAAA,EACbF,EAAAA,EAAAA,KAAA,MAAAE,SAAKE,EAAGQ,QACRZ,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAGS,iBAdFT,EAAGU,GAkBhB,OAKV,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCastList = styled.ul`\n  padding-top: 25px;\n  display: grid;\n  max-width: calc(100vw - 45px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 20px;\n\n  li {\n    padding: 10px;\n    height: 350px;\n    box-shadow: 2px 2px 4px 1px lightgray;\n\n    img {\n      width: 100%;\n    }\n  }\n`;\n\nexport const CastMemberInfo = styled.div`\n  padding: 7px;\n  width: 200px;\n  display: inline-flex;\n  flex-direction: column;\n  row-gap: 5px;\n\n  p {\n    font-weight: 500;\n    color: gray;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/movies.api';\nimport { CastMemberInfo, StyledCastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { cast } = await fetchMovies(`/movie/${movieId}/credits`);\n        setCast(cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <StyledCastList>\n          {cast.map(el => {\n            return (\n              <li key={el.id}>\n                <img\n                  src={\n                    el.profile_path\n                      ? `https://image.tmdb.org/t/p/original${el.profile_path}`\n                      : 'https://cdn-icons-png.flaticon.com/512/3106/3106773.png'\n                  }\n                  alt=\"actor avatar\"\n                  width=\"200\"\n                  height=\"280\"\n                  loading=\"lazy\"\n                />\n                <CastMemberInfo>\n                  <h4>{el.name}</h4>\n                  <p>{el.character}</p>\n                </CastMemberInfo>\n              </li>\n            );\n          })}\n        </StyledCastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["StyledCastList","styled","_templateObject","_taggedTemplateLiteral","CastMemberInfo","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovies","_cast","_context","prev","next","fetchMovies","concat","sent","t0","console","log","message","stop","apply","arguments","_jsx","_Fragment","children","map","el","_jsxs","src","profile_path","alt","width","height","loading","name","character","id"],"sourceRoot":""}